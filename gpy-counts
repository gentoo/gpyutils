#!/usr/bin/env python
#	vim:fileencoding=utf-8
# (c) 2013 Michał Górny <mgorny@gentoo.org>
# Released under the terms of the 2-clause BSD license.

# Count migrated packages and packages to migrate.
# Synopsis: ./py-counts > counts.css

from gentoopm import get_package_manager

from collections import defaultdict
import sys

from gpyutils.ansi import ANSI
from gpyutils.eclasses import guess_package_type, PkgType
from gpyutils.packages import group_packages

pm = get_package_manager()

def is_stable(p):
	return any([x[0] not in ('~', '-') for x in p.keywords])

def process(pkgs):
	prev_key = None

	# new-name: [old, unstable, new]
	counts = defaultdict(lambda: [0, 0, 0])

	curr = []
	total_migr = 0
	total_pkg = 0

	sys.stderr.write('%s%sWaiting for PM to start iterating...%s\r'
			% (ANSI.clear_line, ANSI.brown, ANSI.reset))

	for pg in group_packages(pkgs):
		sys.stderr.write('%s%s%-40s%s (%s%4d%s of %s%4d%s migrated)\r'
				% (ANSI.clear_line, ANSI.green, pg[0].key, ANSI.reset,
					ANSI.white, total_migr, ANSI.reset,
					ANSI.white, total_pkg, ANSI.reset))

		# eclass => [old-eclass, new-eclass]
		# None -> no ebuilds, False -> testing, True -> stable
		kinds = defaultdict(lambda: defaultdict(lambda: None))

		for p in pg:
			t = guess_package_type(p)
			if not isinstance(t, PkgType.non_python):
				kinds[t.subtype][t] = bool(kinds[t.subtype][t]) | is_stable(p)

		# some packages fit more than one category
		# e.g. p.eclass supported single impl, p-r1 supports many
		# prefer counting as the kind with -r1

		best_kinds = [k for k, v in kinds.items() if v[PkgType.python_r1] is not None]
		if not best_kinds:
			best_kinds = [k for k, v in kinds.items() if v[PkgType.python_r0] is not None]
		if not best_kinds: # not a python package
			continue
		best_kind = sorted(best_kinds)[-1]

		r1_stable = any([v[PkgType.python_r1] for v in kinds.values()])
		r0_stable = any([v[PkgType.python_r0] for v in kinds.values()])
		r1_any = any([v[PkgType.python_r1] is not None for v in kinds.values()])

		if not r1_any: # not converted yet
			counts[best_kind][0] += 1
		else:
			total_migr += 1
			if r0_stable and not r1_stable: # not stabilized yet
				counts[best_kind][1] += 1
			else: # all done
				counts[best_kind][2] += 1

		total_pkg += 1

	sys.stderr.write('%s%sDone.%s\n'
			% (ANSI.clear_line, ANSI.white, ANSI.reset))

	for t, n in counts.items():
		eclass = t.eclass_r1
		old, unstable, new = n
		sum = old + unstable + new
		perc = 100.0*new/sum
		perc2 = 100.0*(new+unstable)/sum

		print('')
		print('/* %s */' % eclass)
		for key, val in (('old', old), ('new', new + unstable),
				('unstable', unstable), ('all', sum),
				('perc', perc), ('perc2', perc2)):
			# stupid firefox can't handle content without pseudo-selectors
			print("#%s-%s:before { content: '%d'; }" % (eclass, key, val))
		print('#%s-bar { width: %.2f%%; }' % (eclass, perc))
		print('#%s-bar2 { width: %.2f%%; }' % (eclass, perc2))

def main(prog_name, *argv):
	if sys.stdout.isatty():
		sys.stderr.write('[note: I output CSS, you want >counts.css]\n')

	if not argv:
		process(pm.repositories['gentoo'])
	else:
		for pkg in argv:
			process(pm.repositories['gentoo'].filter(pkg))

	return 0

if __name__ == '__main__':
	sys.exit(main(*sys.argv))
