#!/usr/bin/env python

from gentoopm import get_package_manager

import sys

pm = get_package_manager()

mapping = {
	'python2_5': '2.5',
	'python2_6': '2.6',
	'python2_7': '2.7',
	'python3_1': '3.1',
	'python3_2': '3.2',
	'python3_3': '3.3',
	'pypy1_8': 'p1.8',
	'pypy1_9': 'p1.9',
	'pypy2_0': 'p2.0',
	'jython2_5': 'j2.5',
}

p_eclass_mapping = {
	'2.7-pypy-1.8': 'p1.8',
	'2.7-pypy-1.9': 'p1.9',
	'2.7-pypy-2.0': 'p2.0',
	'2.5-jython': 'j2.5',
}

keys = sorted(mapping.values())

def process(pkgs):
	for p in pkgs.sorted:
		p_r1 = any([x in p.inherits for x in ('python-r1', 'python-any-r1',
				'python-single-r1', 'python-distutils-ng')])
		p_r0 = 'python' in p.inherits

		output = [' ' * len(x) for x in keys]

		if p_r1:
			impls = [mapping[x] for x
					in p.environ['PYTHON_COMPAT[*]'].split()]
		elif p_r0:
			impls = set(keys)
			for x in p.environ['RESTRICT_PYTHON_ABIS'].split():
				if x in p_eclass_mapping:
					x = p_eclass_mapping[x]
				impls.remove(x)
		else:
			break

		for f in impls:
			output[keys.index(f)] = f

		print('%44s: %s' % (p, ' '.join(output)))

if len(sys.argv) == 1:
	process(pm.stack)
else:
	for pkg in sys.argv[1:]:
		process(pm.stack.filter(pkg))
