#!/usr/bin/env python

from gentoopm.pkgcorepm import PkgCorePM

from gentoopm.basepm.atom import PMAtom

pm = PkgCorePM()

class PkgType(object):
	class other(object):
		pass
	class multi(object):
		pass
	class single(object):
		pass

	def __new__(cls, pkg):
		if 'python-r1' in pkg.inherits:
			return cls.multi
		elif 'python-single-r1' in pkg.inherits:
			return cls.single
		else:
			return cls.other

for r in pm.repositories:
	for p in r:
		t = PkgType(p)
		if t is PkgType.other:
			continue

		def check_dep(dep):
			if isinstance(dep, PMAtom):
				# XXX: support other PMs than pkgcore
				if not dep._r.use:
					for x in r.filter(dep):
						dt = PkgType(x)

						if dt is not PkgType.other:
							print('%s: %s [lacks PYTHON_USEDEP]' % (p, dep))
			else:
				for dp in dep:
					check_dep(dp)

		for d in (p.run_dependencies, p.build_dependencies, p.post_dependencies):
			check_dep(d)

		break
